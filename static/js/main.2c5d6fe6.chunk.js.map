{"version":3,"sources":["serviceWorker.js","components/card.js","components/navbar.js","components/header.js","components/footer.js","components/home.js","App.js","components/notes.js","components/about.js","index.js"],"names":["Boolean","window","location","hostname","match","ConceptCard","links","is_internal","map","link","to","href","target","this","props","title","image","description","objectives","notes","exercises","projects","challenges","convert_to_links","className","src","objective","undefined","challenge","React","Component","NavBar","listenToScroll","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","setState","state","addEventListener","removeEventListener","console","log","id","Header","Footer","HomePage","data","fetch","then","res","json","cards","i","length","push","App","NotesPage","markdown","pathname","text","source","AboutPage","routing","basename","process","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c5d6fe6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class ConceptCard extends React.Component {\n  convert_to_links(links, is_internal) {\n    if (links) {\n      if (is_internal) {\n        links = links.map(link => <Link to={link['link']}>{link['name']}</Link>)\n      }\n      else {\n        links = links.map(link => <a href={link['link']} target='_blank'>{link['name']}</a>)\n      }\n    }\n    return links\n  }\n\n  render() {\n    let {\n      title,\n      image,\n      description,\n      objectives,\n      links,\n      notes,\n      exercises,\n      projects,\n      challenges,\n    } = this.props\n\n    links = this.convert_to_links(links, false)\n    challenges = this.convert_to_links(challenges, false)\n\n    notes = this.convert_to_links(notes, true)\n    exercises = this.convert_to_links(exercises, false)\n    projects = this.convert_to_links(projects, false)\n\n\n    return (\n      <div className=\"concept-card\">\n        <div className=\"card-preview\">\n          <img className=\"card-preview-image\" src={\"https://raw.githubusercontent.com/geoffreyangus/md-ml/master/\" + image}/>\n          <div>\n            {description}\n          </div>\n          <div className=\"card-preview-objectives\">\n            <b>Learning Objectives:</b>\n            <ol>\n              {objectives.map(objective => <li>{objective}</li>)}\n            </ol>\n          </div>\n          {links !== undefined ?\n            <div>\n              <b>Useful Links:</b>\n              <ul>\n                {links.map(link => <li>{link}</li>)}\n              </ul>\n            </div> :\n            <div></div>\n          }\n          {challenges !== undefined ?\n            <div>\n              <b>Challenges:</b>\n              <ul>\n                {challenges.map(challenge => <li>{challenge}</li>)}\n              </ul>\n            </div> :\n            <div></div>\n          }\n        </div>\n        <div className=\"card-body\">\n          <div className=\"card-body-title\">\n            {title}\n          </div>\n          <div className=\"card-materials\">\n            <div className=\"card-materials-notes\">\n              <div className=\"card-materials-title\">Notes</div>\n              {notes}\n            </div>\n            <div className=\"card-materials-assignments\">\n              <div className=\"card-materials-title\">Exercises</div>\n              {exercises}\n            </div>\n            <div className=\"card-materials-assignments\">\n              <div className=\"card-materials-title\">Projects</div>\n              {projects}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default class NavBar extends Component {\n    constructor() {\n        super();\n        this.state = {scrolled: false}\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.listenToScroll)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.listenToScroll)\n    }\n\n    listenToScroll = () => {\n        const winScroll =\n            document.body.scrollTop || document.documentElement.scrollTop\n\n        const height =\n            document.documentElement.scrollHeight -\n            document.documentElement.clientHeight\n\n        const scrolled = winScroll / height\n\n        this.setState({\n            scrolled: scrolled > 0,\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div id=\"navbar\" className={this.state.scrolled ? \"navbar scroll\" : \"navbar\"}>\n                <a className=\"main-link\" href=\"/md-ml/\" className=\"btn\"><div><b>MD</b>+<b>ML</b></div></a>\n                <Link to=\"/about\">About</Link>\n                <a target=\"_blank\" href=\"https://repl.it/logout\" className=\"btn\">Login</a>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport NavBar from './navbar'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div id=\"navbar-wrapper\">\n                <NavBar />\n            </div>\n        )\n    }\n}","// Icon made by[author link]from www.flaticon.com\nimport React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                Terminal icon made by Focus from the Noun Project.\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nimport ConceptCard from './card'\nimport NavBar from './navbar'\nimport Header from './header'\nimport Footer from './footer'\n\n\nexport default class HomePage extends Component {\n    constructor() {\n        super();\n        this.state = { data: null };\n    }\n\n    componentDidMount() {\n        fetch('https://raw.githubusercontent.com/geoffreyangus/md-ml/master/data/home.json')\n            .then(res => res.json())\n            .then(res => this.setState({ data: res }));\n    }\n\n    render() {\n        const { data } = this.state;\n\n        let cards = []\n        if (data != null) {\n            for (let i = 0; i < data.length; i++) {\n                cards.push(\n                    <ConceptCard\n                        title={data[i]['title']}\n                        image={data[i]['image']}\n                        description={data[i]['description']}\n                        objectives={data[i]['objectives']}\n                        challenges={data[i]['challenges']}\n                        links={data[i]['links']}\n                        notes={data[i]['notes']}\n                        exercises={data[i]['exercises']}\n                        projects={data[i]['projects']}\n                        challenges={data[i]['challenges']}\n                    />\n                )\n            }\n        }\n\n        return (\n            <div id=\"home-page\">\n                <Header/>\n                <div id=\"concept-cards-wrapper\">\n                    {cards}\n                </div>\n                <Footer/>\n            </div>\n\n        )\n    }\n}","import './App.css';\nimport React, { Component } from 'react';\n\nimport HomePage from './components/home'\n\n\nexport default class App extends Component {\n  render() {\n    return <HomePage/>\n  }\n}","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport Header from './header'\nimport Footer from './footer'\n\nexport default class NotesPage extends Component {\n    constructor() {\n        super();\n        this.state = { markdown: '' };\n    }\n\n    componentDidMount() {\n        fetch(\"https://raw.githubusercontent.com/geoffreyangus/md-ml/master/data\" + this.props.location.pathname)\n            .then(res => res.text())\n            .then(text => this.setState({ markdown: text }));\n    }\n\n    render() {\n        const { markdown } = this.state;\n        return (\n            <div>\n                <Header/>\n                <div className=\"notes-wrapper\">\n                    <ReactMarkdown source={markdown} />\n                    <Footer />\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport ReactMarkdown from 'react-markdown';\n\nimport Header from './header'\nimport Footer from './footer'\n\nexport default class AboutPage extends React.Component {\n    constructor() {\n        super();\n        this.state = { markdown: '' };\n    }\n\n    componentDidMount() {\n        fetch(\"https://raw.githubusercontent.com/geoffreyangus/md-ml/master/data/about/about.md\")\n            .then(res => res.text())\n            .then(text => this.setState({ markdown: text }));\n    }\n\n    render() {\n        const { markdown } = this.state;\n        return (\n            <div>\n                <Header/>\n                <div className=\"notes-wrapper\">\n                    <ReactMarkdown source={markdown} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\nimport NotesPage from './components/notes'\nimport AboutPage from './components/about'\n\nconst routing = (\n    <Router basename={process.env.PUBLIC_URL}>\n        <div>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/notes\" component={NotesPage} />\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}